services:
  db:
    image: postgres:16.2
    container_name: ctbbj-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ctbbj_postgres_data:/var/lib/postgresql/data

  web:
    build: .
    container_name: ctbbj-web
    restart: unless-stopped
    command: gunicorn clipping.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - .:/app
      - ctbbj_static_volume:/app/staticfiles
      - ctbbj_media_volume:/app/media

  nginx:
    image: nginx:alpine
    container_name: ctbbj-nginx
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # your vhost
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # static & media served by nginx
      - ctbbj_static_volume:/app/staticfiles:ro
      - ctbbj_media_volume:/app/media:ro
      # certs and ACME webroot
      - ./nginx/certs:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro

  certbot:
    image: certbot/certbot
    container_name: ctbbj-certbot
    # no need to run all the time; you will run it on demand to issue/renew
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/log:/var/log/letsencrypt

volumes:
  ctbbj_postgres_data:
  ctbbj_static_volume:
  ctbbj_media_volume:
